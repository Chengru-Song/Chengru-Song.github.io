<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN"><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="zh-CN" /><updated>2022-09-01T00:25:36+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Chengru’s Blog</title><subtitle>A personal blog website for sharing of technology, reflection and branding. 
</subtitle><author><name>Chengru Song</name></author><entry><title type="html">【Basic】Scala</title><link href="http://localhost:4000/work/scala/basics/2022/08/30/scala-language.html" rel="alternate" type="text/html" title="【Basic】Scala" /><published>2022-08-30T11:18:07+08:00</published><updated>2022-08-30T11:18:07+08:00</updated><id>http://localhost:4000/work/scala/basics/2022/08/30/scala-language</id><content type="html" xml:base="http://localhost:4000/work/scala/basics/2022/08/30/scala-language.html"><![CDATA[<h1 id="what-is-scala">What is Scala</h1>

<p>Scala is used in <strong>Big Data Processing</strong>, <strong>Machine Learning</strong>, <strong>Streaming Services</strong>, etc. It is designed to run big data applications based on Java. If your application requires big data processing which contains logs of SQL-like quries, and those query results needs some further processing according to some business logic implementations, it works for you.</p>

<p>With regard to <strong>Big Data Processing</strong>, check <a href="https://www.infoq.cn/article/spark-vs-flink">spark v.s. flink</a> for details.</p>

<p><img src="/assets/images/image-20220830154156667.png" alt="image-20220830154156667" /></p>

<h1 id="how-to-use-scala">How to use Scala</h1>

<p>Reference docs:</p>

<ol>
  <li><a href="https://docs.scala-lang.org/getting-started/index.html">Get started</a></li>
  <li><a href="https://docs.scala-lang.org/scala3/book/tools-sbt.html">Build and test with sbt</a></li>
</ol>

<h2 id="basic-tools-and-usages">Basic tools and usages</h2>

<table>
  <thead>
    <tr>
      <th>Commands</th>
      <th>Descrpition</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">scalac</code></td>
      <td>scala compiler</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">scala</code></td>
      <td>scala script runner</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">scala-cli</code></td>
      <td>interactive console for scala</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">sbt</code>, <code class="language-plaintext highlighter-rouge">sbtn</code></td>
      <td>sbt build tool, doc see here: <a href="https://docs.scala-lang.org/scala3/book/tools-sbt.html">build and test with sbt</a></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">amm</code></td>
      <td>enhanced REPL</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">scalafmt</code></td>
      <td>code formatter</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">cs</code></td>
      <td>Coursier, similiar to Maven, a dependency management tool</td>
    </tr>
  </tbody>
</table>

<h2 id="steps">Steps</h2>

<ol>
  <li>Create a template project by running <code class="language-plaintext highlighter-rouge">sbt new scala/scala3.g8</code>.</li>
  <li></li>
</ol>]]></content><author><name>Chengru Song</name></author><category term="[&quot;work&quot;, &quot;scala&quot;, &quot;basics&quot;]" /><category term="301-work-blog" /><category term="301-work-learning" /><summary type="html"><![CDATA[What is Scala Scala is used in Big Data Processing, Machine Learning, Streaming Services, etc. It is designed to run big data applications based on Java. If your application requires big data processing which contains logs of SQL-like quries, and those query results needs some further processing according to some business logic implementations, it works for you. With regard to Big Data Processing, check spark v.s. flink for details. How to use Scala Reference docs: Get started Build and test with sbt Basic tools and usages Commands Descrpition scalac scala compiler scala scala script runner scala-cli interactive console for scala sbt, sbtn sbt build tool, doc see here: build and test with sbt amm enhanced REPL scalafmt code formatter cs Coursier, similiar to Maven, a dependency management tool Steps Create a template project by running sbt new scala/scala3.g8.]]></summary></entry><entry><title type="html">【博客】成为专家</title><link href="http://localhost:4000/blog/work/2022/08/29/new_topic_expertise.html" rel="alternate" type="text/html" title="【博客】成为专家" /><published>2022-08-29T13:41:58+08:00</published><updated>2022-08-29T13:41:58+08:00</updated><id>http://localhost:4000/blog/work/2022/08/29/new_topic_expertise</id><content type="html" xml:base="http://localhost:4000/blog/work/2022/08/29/new_topic_expertise.html"><![CDATA[<h1 id="tldr">TL;DR</h1>

<p>TLDR</p>

<!--more-->

<h1 id="introduction">Introduction</h1>

<p>如何成为领域专家？</p>

<ol>
  <li>老业务如何了解？</li>
  <li>老业务新方向如何开辟？</li>
  <li>新业务作业怎么抄？</li>
</ol>]]></content><author><name>Chengru Song</name></author><category term="[&quot;Blog&quot;, &quot;work&quot;]" /><category term="301-work-basics" /><summary type="html"><![CDATA[TL;DR TLDR]]></summary></entry><entry><title type="html">【博客】Multi-tasking</title><link href="http://localhost:4000/blog/work/2022/08/24/multi-tasking.html" rel="alternate" type="text/html" title="【博客】Multi-tasking" /><published>2022-08-24T13:41:58+08:00</published><updated>2022-08-24T13:41:58+08:00</updated><id>http://localhost:4000/blog/work/2022/08/24/multi-tasking</id><content type="html" xml:base="http://localhost:4000/blog/work/2022/08/24/multi-tasking.html"><![CDATA[<h1 id="multi-tasking">Multi-tasking</h1>

<h2 id="what-happened">What happened</h2>

<p>发现自己最近经常在multi-tasking，需要context switch，带来两个问题</p>

<ol>
  <li>工作效率下降；</li>
  <li>工作重点不能很好把握；</li>
  <li>切换回来的时候需要重新进入到context。</li>
</ol>

<h2 id="what-can-i-do">What can I do</h2>

<ol>
  <li>每天进入工作状态之前，先整理一下今天的ToDo，确定会议时间都在哪个时段，给会议分级标注重要程度；</li>
  <li><del>在每次进行context switch之前，用五分钟时间保存工作状态，便于切换回当前状态；</del>(参考doc writing)</li>
  <li><del>临时需要回复的重要消息，10分钟之内响应，响应的时候确保当前工作被暂存了</del>。</li>
  <li>利用好GTD工作流，管理自己的工作状态。
    <ol>
      <li>[update on 09/01] 大任务拆分成ToDo，能立刻执行的item；</li>
      <li>任务分为<strong>现在</strong>，<strong>将来</strong>和<strong>等待</strong>。</li>
      <li><strong>两个分类</strong>：优先级分类，整体和琐碎分类。</li>
      <li>根据优先级和任务类型，划分先后顺序和时间分割程度和注意力集中程度来执行任务。</li>
    </ol>
  </li>
</ol>

<h2 id="what-do-i-need">What do I need</h2>

<ol>
  <li>一个能够规划时间并在下个事件开始前5分钟提醒我的软件；</li>
  <li>一个能够管理自己的GTD工作流的软件；</li>
  <li>一个记录context的笔记软件，最好能和提醒我的工具放在一起。</li>
</ol>

<h2 id="current-method">Current Method</h2>

<h3 id="需等待任务流优化">需等待任务流优化</h3>

<h3 id="sql">SQL</h3>

<p>最近的很多工作涉及到SQL的查询，因此需要等待查询结果。如何对这个流程进行优化</p>

<ol>
  <li>把所有希望进行的查询进行整理，提交之后不再进行等待，而是紧接着写下一个任务；</li>
  <li>对提交后的任务进行命名，方便自己快速跟踪任务进度；</li>
  <li>在一个页面上整理本次批处理的结果，如果有失败需要重新跑的任务，依然是对失败任务进行批处理操作。</li>
</ol>

<h3 id="doc-writing">Doc Writing</h3>

<p>涉及到写文档，有重要需要即时处理的消息</p>

<ol>
  <li><strong>承上启下一句话</strong>：快速总结context，一句话概括下面做什么，例如：（已经概述完背景，下面画一个use case的图，开始讲业务逻辑）</li>
  <li><strong>控制时间2分钟</strong>：以上2分钟完成，做context swtich</li>
  <li><strong>根据这句话重启任务</strong></li>
</ol>

<h3 id="日常任务流优化">日常任务流优化</h3>

<p>日常任务较为琐碎，考虑用以下方法进行优化，参考文章<a href="https://www.jianshu.com/p/e6a896ca6293">让事情都井井有条的GTD工作流 - 简书 (jianshu.com)</a>。
<img src="/assets/images/2022-08-24-14-05-42.png" alt="Image" style="zoom:50%;" /></p>

<ol>
  <li>
    <p>苹果日历自带提醒功能，而且可以提前5分钟提醒，对必须要参加的会议或者重要事件设置提前提醒时间<img src="/assets/images/image-20220825000256185.png" alt="image-20220825000256185" style="zoom:50%;" /></p>
  </li>
  <li>对于剩余时间进行切割，划分成不同的专注时长。让自己尽量在这个时间内更专注于某一件事情</li>
  <li>利用印象笔记完成GTD工作流的整理。</li>
</ol>

<h3 id="纵向任务优化">纵向任务优化</h3>

<p><img src="/assets/images/image-20220825000940641.png" alt="image-20220825000940641" style="zoom: 33%;" /></p>

<p>管理一个比较大的课题时，可以考虑采取以下步骤进行拆解</p>]]></content><author><name>Chengru Song</name></author><category term="[&quot;Blog&quot;, &quot;work&quot;]" /><category term="301-life-blog" /><summary type="html"><![CDATA[Multi-tasking What happened 发现自己最近经常在multi-tasking，需要context switch，带来两个问题 工作效率下降； 工作重点不能很好把握； 切换回来的时候需要重新进入到context。 What can I do 每天进入工作状态之前，先整理一下今天的ToDo，确定会议时间都在哪个时段，给会议分级标注重要程度； 在每次进行context switch之前，用五分钟时间保存工作状态，便于切换回当前状态；(参考doc writing) 临时需要回复的重要消息，10分钟之内响应，响应的时候确保当前工作被暂存了。 利用好GTD工作流，管理自己的工作状态。 [update on 09/01] 大任务拆分成ToDo，能立刻执行的item； 任务分为现在，将来和等待。 两个分类：优先级分类，整体和琐碎分类。 根据优先级和任务类型，划分先后顺序和时间分割程度和注意力集中程度来执行任务。 What do I need 一个能够规划时间并在下个事件开始前5分钟提醒我的软件； 一个能够管理自己的GTD工作流的软件； 一个记录context的笔记软件，最好能和提醒我的工具放在一起。 Current Method 需等待任务流优化 SQL 最近的很多工作涉及到SQL的查询，因此需要等待查询结果。如何对这个流程进行优化 把所有希望进行的查询进行整理，提交之后不再进行等待，而是紧接着写下一个任务； 对提交后的任务进行命名，方便自己快速跟踪任务进度； 在一个页面上整理本次批处理的结果，如果有失败需要重新跑的任务，依然是对失败任务进行批处理操作。 Doc Writing 涉及到写文档，有重要需要即时处理的消息 承上启下一句话：快速总结context，一句话概括下面做什么，例如：（已经概述完背景，下面画一个use case的图，开始讲业务逻辑） 控制时间2分钟：以上2分钟完成，做context swtich 根据这句话重启任务 日常任务流优化 日常任务较为琐碎，考虑用以下方法进行优化，参考文章让事情都井井有条的GTD工作流 - 简书 (jianshu.com)。 苹果日历自带提醒功能，而且可以提前5分钟提醒，对必须要参加的会议或者重要事件设置提前提醒时间 对于剩余时间进行切割，划分成不同的专注时长。让自己尽量在这个时间内更专注于某一件事情 利用印象笔记完成GTD工作流的整理。 纵向任务优化 管理一个比较大的课题时，可以考虑采取以下步骤进行拆解]]></summary></entry><entry><title type="html">【博客】Thoughts 1</title><link href="http://localhost:4000/blog/2022/07/18/thoughts-1.html" rel="alternate" type="text/html" title="【博客】Thoughts 1" /><published>2022-07-18T09:27:58+08:00</published><updated>2022-07-18T09:27:58+08:00</updated><id>http://localhost:4000/blog/2022/07/18/thoughts-1</id><content type="html" xml:base="http://localhost:4000/blog/2022/07/18/thoughts-1.html"><![CDATA[<p>最新感触，所有你当前希望逃避的东西，都会在未来加倍找到你。还是好好想想当前怎么解决这个问题，这样就不会在未来这个问题更加棘手，不得不解决的时候，让自己陷入更大的被动。</p>]]></content><author><name>Chengru Song</name></author><category term="[&quot;Blog&quot;]" /><category term="301-life-blog" /><summary type="html"><![CDATA[最新感触，所有你当前希望逃避的东西，都会在未来加倍找到你。还是好好想想当前怎么解决这个问题，这样就不会在未来这个问题更加棘手，不得不解决的时候，让自己陷入更大的被动。]]></summary></entry><entry><title type="html">【Web3】麦肯锡元宇宙研究报告精读解析</title><link href="http://localhost:4000/work/web3/2022/07/17/web3-mckinsey-metaverse-study.html" rel="alternate" type="text/html" title="【Web3】麦肯锡元宇宙研究报告精读解析" /><published>2022-07-17T16:11:09+08:00</published><updated>2022-07-17T16:11:09+08:00</updated><id>http://localhost:4000/work/web3/2022/07/17/web3-mckinsey-metaverse-study</id><content type="html" xml:base="http://localhost:4000/work/web3/2022/07/17/web3-mckinsey-metaverse-study.html"><![CDATA[<h1 id="value-creation-in-the-metaverse">Value Creation in the metaverse</h1>

<p>Metaverse更像是web3的一个产品形态，一个集大成者，而并非web3的所有体现。但作为web3的一个重要应用，Metaverse有无可替代的作用。就像图像识别之于人工智能，正因为有具体应用的蓬勃发展，其底层技术的潜力才得到了更多的认可以及开发。</p>

<p>本文基于McKinsey对Metaverse的研究报告《Value Creation in the Metaverse》，对其进行精读和分析，从经济和业务的角度对发展前景和发展方向进行深度剖析，并试图回答以下几个问题</p>

<ol>
  <li>什么是Metaverse？</li>
  <li>是什么因素驱动了大家对Metaverse的投资？</li>
  <li>Metaverse的消费者和业务的演进是怎样的？</li>
  <li>Metaverse的潜力到底有多大？</li>
  <li>我立刻可以开始着手做的事情是什么？</li>
</ol>

<p>Mckinsey研究报告的对象主要是行业内高管和Metaverse的消费者，主要涉及到业务模型和一些发展洞察，以及较为浅显的技术知识，如果有强开发目的的读者，可以移步更加技术向的文章。</p>

<h2 id="整体介绍">整体介绍</h2>

<p>首先呈现几组调查数据</p>

<table>
  <thead>
    <tr>
      <th>描述</th>
      <th>数字</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2021年VC＋私募投资总额</td>
      <td>$13b</td>
    </tr>
    <tr>
      <td>2030年止，Metaverse市场价值会达到</td>
      <td>~$5t</td>
    </tr>
    <tr>
      <td>截止到2022年6月，Metaverse的投资已达</td>
      <td>&gt;$120b</td>
    </tr>
  </tbody>
</table>

<p>以上是从金融投资角度对Metaverse的洞察。如果我们转移视线到消费者和品牌，当他们听到Metaverse时</p>

<table>
  <thead>
    <tr>
      <th>描述</th>
      <th>数字</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>对将每日活动转移到Metaverse感到兴奋</td>
      <td>59%</td>
    </tr>
    <tr>
      <td>表示会采用Metaverse到产品的公司矩阵中</td>
      <td>57%</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th>消费者对Metaverse最感兴趣的5个场景</th>
      <th>公司正在实现的几个用例场景</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>社交</td>
      <td>市场营销活动或提案</td>
    </tr>
    <tr>
      <td>娱乐</td>
      <td>员工学习和发展平台</td>
    </tr>
    <tr>
      <td>游戏</td>
      <td>线上会议</td>
    </tr>
    <tr>
      <td>旅游</td>
      <td>线下活动或者会议</td>
    </tr>
    <tr>
      <td>购物</td>
      <td>产品设计和数字孪生</td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
    </tr>
  </tbody>
</table>

<p>Mckinsey从不同的source了解后，结合专业人士的观点，定义出的<em>Metaverse</em>的几层架构：</p>

<p><img src="/assets/images/2022-07-28-10-17-09.png" alt="Image" />
图1 Metaverse的十层结构</p>]]></content><author><name>Chengru Song</name></author><category term="[&quot;work&quot;, &quot;web3&quot;]" /><category term="301-work-web3" /><summary type="html"><![CDATA[Value Creation in the metaverse Metaverse更像是web3的一个产品形态，一个集大成者，而并非web3的所有体现。但作为web3的一个重要应用，Metaverse有无可替代的作用。就像图像识别之于人工智能，正因为有具体应用的蓬勃发展，其底层技术的潜力才得到了更多的认可以及开发。 本文基于McKinsey对Metaverse的研究报告《Value Creation in the Metaverse》，对其进行精读和分析，从经济和业务的角度对发展前景和发展方向进行深度剖析，并试图回答以下几个问题 什么是Metaverse？ 是什么因素驱动了大家对Metaverse的投资？ Metaverse的消费者和业务的演进是怎样的？ Metaverse的潜力到底有多大？ 我立刻可以开始着手做的事情是什么？ Mckinsey研究报告的对象主要是行业内高管和Metaverse的消费者，主要涉及到业务模型和一些发展洞察，以及较为浅显的技术知识，如果有强开发目的的读者，可以移步更加技术向的文章。 整体介绍 首先呈现几组调查数据 描述 数字 2021年VC＋私募投资总额 $13b 2030年止，Metaverse市场价值会达到 ~$5t 截止到2022年6月，Metaverse的投资已达 &gt;$120b 以上是从金融投资角度对Metaverse的洞察。如果我们转移视线到消费者和品牌，当他们听到Metaverse时 描述 数字 对将每日活动转移到Metaverse感到兴奋 59% 表示会采用Metaverse到产品的公司矩阵中 57% 消费者对Metaverse最感兴趣的5个场景 公司正在实现的几个用例场景 社交 市场营销活动或提案 娱乐 员工学习和发展平台 游戏 线上会议 旅游 线下活动或者会议 购物 产品设计和数字孪生     Mckinsey从不同的source了解后，结合专业人士的观点，定义出的Metaverse的几层架构： 图1 Metaverse的十层结构]]></summary></entry><entry><title type="html">【Web3】Web3 Concepts</title><link href="http://localhost:4000/work/web3/2022/07/17/web3-concepts.html" rel="alternate" type="text/html" title="【Web3】Web3 Concepts" /><published>2022-07-17T16:11:09+08:00</published><updated>2022-07-17T16:11:09+08:00</updated><id>http://localhost:4000/work/web3/2022/07/17/web3-concepts</id><content type="html" xml:base="http://localhost:4000/work/web3/2022/07/17/web3-concepts.html"><![CDATA[<h1 id="web3-concepts">Web3 Concepts</h1>

<p>The main idea behind web3 would be decentralization. It differs from web2 in data and information organization, as well as token-based economics.</p>

<p>Compared with traditional applications, web3 applications have some salient features.</p>

<ul>
  <li>Open. Stored in open network. Therefore data is visable to all participants.</li>
  <li>Trustless. A user could build connections to every other participants.</li>
  <li></li>
</ul>]]></content><author><name>Chengru Song</name></author><category term="[&quot;work&quot;, &quot;web3&quot;]" /><category term="301-work-web3" /><summary type="html"><![CDATA[Web3 Concepts The main idea behind web3 would be decentralization. It differs from web2 in data and information organization, as well as token-based economics. Compared with traditional applications, web3 applications have some salient features. Open. Stored in open network. Therefore data is visable to all participants. Trustless. A user could build connections to every other participants.]]></summary></entry><entry><title type="html">Web3 Learning</title><link href="http://localhost:4000/work/web3/2022/07/14/web3-learning.html" rel="alternate" type="text/html" title="Web3 Learning" /><published>2022-07-14T00:00:00+08:00</published><updated>2022-07-14T00:00:00+08:00</updated><id>http://localhost:4000/work/web3/2022/07/14/web3-learning</id><content type="html" xml:base="http://localhost:4000/work/web3/2022/07/14/web3-learning.html"><![CDATA[<h1 id="web3-learning-goals">Web3 Learning Goals</h1>
<!--more-->

<h2 id="basic-knowledge">Basic Knowledge</h2>
<ol>
  <li>What are the definitions of web3 from academic and industry?
    <ol>
      <li>Produce an article and necessary references.</li>
    </ol>
  </li>
  <li>What entities and big names go after the concept actively?
    <ol>
      <li>Produce a list about this</li>
    </ol>
  </li>
  <li>What might be the roadmap of web3?
    <ol>
      <li>An article and reference.</li>
    </ol>
  </li>
  <li>What fields do you think relate to your current work and previous experience most?
    <ol>
      <li>A list of all related topics and job opportunies opening for this one.</li>
      <li>Current architecture of web3 apps.</li>
      <li>A list of necessary skills required.</li>
    </ol>
  </li>
  <li>What are the channels that you can receive latest information?
    <ol>
      <li>A list of channels.</li>
    </ol>
  </li>
  <li>Who can you reach out to that are active developers in web3?
    <ol>
      <li>A list of people and track your communication process.</li>
    </ol>
  </li>
</ol>

<h2 id="practice">Practice</h2>
<ol>
  <li>How can you make it a sideline?</li>
  <li>If you lack the reqired skills, how can you make up for it?</li>
</ol>]]></content><author><name>Chengru Song</name></author><category term="[&quot;work&quot;, &quot;web3&quot;]" /><summary type="html"><![CDATA[Web3 Learning Goals]]></summary></entry><entry><title type="html">【Basic】 Elastic Search</title><link href="http://localhost:4000/work/es/basics/2022/07/01/elastic-search.html" rel="alternate" type="text/html" title="【Basic】 Elastic Search" /><published>2022-07-01T11:18:07+08:00</published><updated>2022-07-01T11:18:07+08:00</updated><id>http://localhost:4000/work/es/basics/2022/07/01/elastic-search</id><content type="html" xml:base="http://localhost:4000/work/es/basics/2022/07/01/elastic-search.html"><![CDATA[<h1 id="es-query">[ES] Query</h1>

<p>Basic Concept: <a href="https://logz.io/blog/elasticsearch-queries">https://logz.io/blog/elasticsearch-queries/</a></p>

<p>42 query examples: <a href="https://coralogix.com/blog/42-elasticsearch-query-examples-hands-on-tutorial">https://coralogix.com/blog/42-elasticsearch-query-examples-hands-on-tutorial/</a></p>

<h1 id="concepts">Concepts</h1>

<ol>
  <li>Match Query - 返回哪些text中包含搜索的关键词
    <ol>
      <li>
        <p>example query</p>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">POST</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
   </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
     </span><span class="nl">"match"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
       </span><span class="nl">"phrase"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
         </span><span class="nl">"query"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"heuristic"</span><span class="w">
       </span><span class="p">}</span><span class="w">
     </span><span class="p">}</span><span class="w">
   </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
      <li>
        <p>Search phrase instead of a word</p>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">POST</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
   </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
     </span><span class="nl">"match"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
       </span><span class="nl">"phrase"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
         </span><span class="nl">"query"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"heuristic roots help"</span><span class="p">,</span><span class="w">
 				</span><span class="nl">"operator"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"AND"</span><span class="p">,</span><span class="w">
 				</span><span class="nl">"minimum_should_match"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="w">
       </span><span class="p">}</span><span class="w">
     </span><span class="p">}</span><span class="w">
   </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
      <li>
        <p>Multi Fields Query</p>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">POST</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
   </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
     </span><span class="nl">"multi_match"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
         </span><span class="nl">"query"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"research help"</span><span class="w">
         </span><span class="p">,</span><span class="w"> </span><span class="nl">"fields"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"position"</span><span class="p">,</span><span class="s2">"phrase"</span><span class="p">]</span><span class="w">
     </span><span class="p">}</span><span class="w">
   </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
      <li>
        <p>Match phrase</p>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">GET</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
   </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
     </span><span class="nl">"match_phrase"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
       </span><span class="nl">"phrase"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
         </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="s2">"roots heuristic coherent"</span><span class="p">,</span><span class="w">
 				</span><span class="nl">"slop"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="w">
       </span><span class="p">}</span><span class="w">
     </span><span class="p">}</span><span class="w">
   </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
      <li>
        <p>Match phrase prefix</p>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">GET</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
 </span><span class="nl">"_source"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">"phrase"</span><span class="w"> </span><span class="p">],</span><span class="w">
   </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
     </span><span class="nl">"match_phrase_prefix"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
       </span><span class="nl">"phrase"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
         </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="s2">"roots heuristic co"</span><span class="p">,</span><span class="w">
 				</span><span class="nl">"max_expansions"</span><span class="p">:</span><span class="w"> </span><span class="mi">60</span><span class="w">
       </span><span class="p">}</span><span class="w">
     </span><span class="p">}</span><span class="w">
   </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
    </ol>
  </li>
  <li>Term Query - 返回文本中的精确查找
    <ol>
      <li>
        <p>Query exact values</p>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">POST</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
   </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
     </span><span class="nl">"terms"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
       </span><span class="nl">"gender"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
         </span><span class="s2">"female"</span><span class="p">,</span><span class="w">
         </span><span class="s2">"male"</span><span class="w">
       </span><span class="p">]</span><span class="w">
     </span><span class="p">}</span><span class="w">
   </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
      <li>
        <p>Exist query</p>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">GET</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
     </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
         </span><span class="nl">"exists"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
             </span><span class="nl">"field"</span><span class="p">:</span><span class="w"> </span><span class="s2">"company"</span><span class="w">
         </span><span class="p">}</span><span class="w">
     </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
      <li>
        <p>Range query</p>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">POST</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
     </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
         </span><span class="nl">"range"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
             </span><span class="nl">"experience"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                 </span><span class="nl">"gte"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">5</span><span class="p">,</span><span class="w">
                 </span><span class="nl">"lte"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">10</span><span class="w">
             </span><span class="p">}</span><span class="w">
         </span><span class="p">}</span><span class="w">
     </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
      <li>
        <p>Id query</p>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">POST</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
     </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
         </span><span class="nl">"ids"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
             </span><span class="nl">"values"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"1"</span><span class="p">,</span><span class="w"> </span><span class="s2">"4"</span><span class="p">]</span><span class="w">
         </span><span class="p">}</span><span class="w">
     </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
      <li>
        <p>Prefix query</p>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">GET</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
   </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
     </span><span class="nl">"prefix"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
       </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"al"</span><span class="w">
     </span><span class="p">}</span><span class="w">
   </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
      <li>
        <p>Wildcard Query</p>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">GET</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
     </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
         </span><span class="nl">"wildcard"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
             </span><span class="nl">"country"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                 </span><span class="nl">"value"</span><span class="p">:</span><span class="w"> </span><span class="s2">"c*a"</span><span class="w">
             </span><span class="p">}</span><span class="w">
         </span><span class="p">}</span><span class="w">
     </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
      <li>
        <p>Regex query</p>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">GET</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
   </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
     </span><span class="nl">"regexp"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
       </span><span class="nl">"position"</span><span class="p">:</span><span class="w"> </span><span class="s2">"res[a-z]*"</span><span class="w">
     </span><span class="p">}</span><span class="w">
   </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
      <li>
        <p>Fuzzy query</p>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">GET</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
   </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
     </span><span class="nl">"fuzzy"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
       </span><span class="nl">"country"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
         </span><span class="nl">"value"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Chnia"</span><span class="p">,</span><span class="w">
         </span><span class="nl">"fuzziness"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2"</span><span class="w">
       </span><span class="p">}</span><span class="w">
     </span><span class="p">}</span><span class="w">
   </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
    </ol>
  </li>
  <li>
    <p>Boosting</p>

    <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">POST</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
     </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
         </span><span class="nl">"multi_match"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
             </span><span class="nl">"query"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"versatile Engineer"</span><span class="p">,</span><span class="w">
             </span><span class="nl">"fields"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"position^3"</span><span class="p">,</span><span class="w"> </span><span class="s2">"phrase"</span><span class="p">]</span><span class="w">
         </span><span class="p">}</span><span class="w">
     </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>    </div>
  </li>
  <li>Sort
    <ol>
      <li>
        <p>Sort by a field</p>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">GET</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
    </span><span class="nl">"_source"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"name"</span><span class="p">,</span><span class="s2">"experience"</span><span class="p">,</span><span class="s2">"salary"</span><span class="p">],</span><span class="w"> 
   </span><span class="nl">"sort"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
     </span><span class="p">{</span><span class="w">
       </span><span class="nl">"experience"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
         </span><span class="nl">"order"</span><span class="p">:</span><span class="w"> </span><span class="s2">"desc"</span><span class="w">
       </span><span class="p">}</span><span class="w">
     </span><span class="p">}</span><span class="w">
   </span><span class="p">]</span><span class="w">
        
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
      <li>
        <p>Sort by multiple field</p>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">GET</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
   </span><span class="nl">"_source"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
     </span><span class="s2">"name"</span><span class="p">,</span><span class="w">
     </span><span class="s2">"experience"</span><span class="p">,</span><span class="w">
     </span><span class="s2">"salary"</span><span class="w">
   </span><span class="p">],</span><span class="w">
   </span><span class="nl">"sort"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
     </span><span class="p">{</span><span class="w">
       </span><span class="nl">"experience"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
         </span><span class="nl">"order"</span><span class="p">:</span><span class="w"> </span><span class="s2">"desc"</span><span class="w">
       </span><span class="p">}</span><span class="w">
     </span><span class="p">},</span><span class="w">
     </span><span class="p">{</span><span class="w">
       </span><span class="nl">"salary"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
         </span><span class="nl">"order"</span><span class="p">:</span><span class="w"> </span><span class="s2">"desc"</span><span class="w">
       </span><span class="p">}</span><span class="w">
     </span><span class="p">}</span><span class="w">
   </span><span class="p">]</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
    </ol>
  </li>
  <li>Compound query
    <ol>
      <li>
        <p>Bool 下面一共可以放这些字段</p>

        <table>
          <thead>
            <tr>
              <th>must</th>
              <th>The conditions or queries in this must occur in the documents to consider them a match. Also, this contributes to the score value.  Eg: if we keep query A and query B in the must section, each document in the result would satisfy both the queries, ie query A AND query B</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>should</td>
              <td>The conditions/queries should match.   Result = query A OR query B</td>
            </tr>
            <tr>
              <td>filter</td>
              <td>Same as the must clause, but the score will be ignored</td>
            </tr>
            <tr>
              <td>must_not</td>
              <td>The conditions/queries specified must not occur in the documents. Scoring is ignored and kept as 0 as the results are ignored.</td>
            </tr>
          </tbody>
        </table>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">POST</span><span class="w"> </span><span class="err">_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
   </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
     </span><span class="nl">"bool"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
       </span><span class="nl">"must"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">[],</span><span class="w">
       </span><span class="nl">"filter"</span><span class="p">:</span><span class="w"> </span><span class="p">[],</span><span class="w">
       </span><span class="nl">"must_not"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">[],</span><span class="w">
       </span><span class="nl">"should"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
     </span><span class="p">}</span><span class="w">
   </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
      <li>
        <p>Multiple conditions</p>

        <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w"> </span><span class="err">POST</span><span class="w"> </span><span class="err">employees/_search</span><span class="w">
 </span><span class="p">{</span><span class="w">
   </span><span class="nl">"query"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
     </span><span class="nl">"bool"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
       </span><span class="nl">"must"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
         </span><span class="p">{</span><span class="w">
           </span><span class="nl">"match"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
             </span><span class="nl">"position"</span><span class="p">:</span><span class="w"> </span><span class="s2">"manager"</span><span class="w">
           </span><span class="p">}</span><span class="w">
         </span><span class="p">},</span><span class="w">
         </span><span class="p">{</span><span class="w">
           </span><span class="nl">"range"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
             </span><span class="nl">"experience"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
               </span><span class="nl">"gte"</span><span class="p">:</span><span class="w"> </span><span class="mi">12</span><span class="w">
             </span><span class="p">}</span><span class="w">
           </span><span class="p">}</span><span class="w">
         </span><span class="p">}</span><span class="w">
       </span><span class="p">],</span><span class="w">
     </span><span class="nl">"should"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
       </span><span class="p">{</span><span class="w">
         </span><span class="nl">"match"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
           </span><span class="nl">"phrase"</span><span class="p">:</span><span class="w"> </span><span class="s2">"versatile"</span><span class="w">
         </span><span class="p">}</span><span class="w">
       </span><span class="p">}</span><span class="w">
     </span><span class="p">]</span><span class="w">
     </span><span class="p">}</span><span class="w">
   </span><span class="p">}</span><span class="w">
 </span><span class="p">}</span><span class="w">
</span></code></pre></div>        </div>
      </li>
      <li>
        <p>Condition combo</p>

        <p>如果要查询下面这样的SQL，对应的condition是？</p>

        <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">SQL</span><span class="p">:</span> <span class="p">(</span><span class="n">company</span> <span class="o">=</span> <span class="n">Yamaha</span> <span class="k">OR</span> <span class="n">company</span> <span class="o">=</span> <span class="n">Yozio</span> <span class="p">)</span> <span class="k">AND</span> <span class="p">(</span><span class="k">position</span> <span class="o">=</span> <span class="n">manager</span> <span class="k">OR</span> <span class="k">position</span> <span class="o">=</span> <span class="n">associate</span> <span class="p">)</span> <span class="k">AND</span> <span class="p">(</span><span class="n">salary</span><span class="o">&gt;=</span><span class="mi">100000</span><span class="p">)</span>
</code></pre></div>        </div>

        <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="n">POST</span> <span class="n">employees</span><span class="o">/</span><span class="n">_search</span>
 <span class="p">{</span>
     <span class="nv">"query"</span><span class="p">:</span> <span class="p">{</span>
         <span class="nv">"bool"</span><span class="p">:</span> <span class="p">{</span>
             <span class="nv">"must"</span><span class="p">:</span> <span class="p">[</span>
               <span class="p">{</span>
                 <span class="nv">"bool"</span><span class="p">:</span> <span class="p">{</span>
                     <span class="nv">"should"</span><span class="p">:</span> <span class="p">[{</span>
                         <span class="nv">"match"</span><span class="p">:</span> <span class="p">{</span>
                             <span class="nv">"company"</span><span class="p">:</span> <span class="nv">"Talane"</span>
                         <span class="p">}</span>
                     <span class="p">},</span> <span class="p">{</span>
                         <span class="nv">"match"</span><span class="p">:</span> <span class="p">{</span>
                             <span class="nv">"company"</span><span class="p">:</span> <span class="nv">"Yamaha"</span>
                         <span class="p">}</span>
                     <span class="p">}]</span>
                 <span class="p">}</span>
             <span class="p">},</span> 
             <span class="p">{</span>
                 <span class="nv">"bool"</span><span class="p">:</span> <span class="p">{</span>
                     <span class="nv">"should"</span><span class="p">:</span> <span class="p">[</span>
                       <span class="p">{</span>
                         <span class="nv">"match"</span><span class="p">:</span> <span class="p">{</span>
                             <span class="nv">"position"</span><span class="p">:</span> <span class="nv">"manager"</span>
                         <span class="p">}</span>
                     <span class="p">},</span> <span class="p">{</span>
                         <span class="nv">"match"</span><span class="p">:</span> <span class="p">{</span>
                             <span class="nv">"position"</span><span class="p">:</span> <span class="nv">"Associate"</span>
                         <span class="p">}</span>
                     <span class="p">}</span>
                     <span class="p">]</span>
                 <span class="p">}</span>
             <span class="p">},</span> <span class="p">{</span>
                 <span class="nv">"bool"</span><span class="p">:</span> <span class="p">{</span>
                     <span class="nv">"must"</span><span class="p">:</span> <span class="p">[</span>
                       <span class="p">{</span>
                         <span class="nv">"range"</span><span class="p">:</span> <span class="p">{</span>
                           <span class="nv">"salary"</span><span class="p">:</span> <span class="p">{</span>
                             <span class="nv">"gte"</span><span class="p">:</span> <span class="mi">100000</span>
                           <span class="p">}</span>
                         <span class="p">}</span>
                       <span class="p">}</span>
                       <span class="p">]</span>
                 <span class="p">}</span>
             <span class="p">}]</span>
         <span class="p">}</span>
     <span class="p">}</span>
 <span class="p">}</span>
</code></pre></div>        </div>
      </li>
      <li>Boosting
        <ol>
          <li></li>
        </ol>

        <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="n">POST</span>  <span class="n">employees</span><span class="o">/</span><span class="n">_search</span>
 <span class="p">{</span>
     <span class="nv">"query"</span><span class="p">:</span> <span class="p">{</span>
         <span class="nv">"boosting"</span> <span class="p">:</span> <span class="p">{</span>
             <span class="nv">"positive"</span> <span class="p">:</span> <span class="p">{</span>
                 <span class="nv">"match"</span><span class="p">:</span> <span class="p">{</span>
                   <span class="nv">"country"</span><span class="p">:</span> <span class="nv">"china"</span>
                 <span class="p">}</span>
             <span class="p">},</span>
             <span class="nv">"negative"</span> <span class="p">:</span> <span class="p">{</span>
                  <span class="nv">"match"</span><span class="p">:</span> <span class="p">{</span>
                   <span class="nv">"company"</span><span class="p">:</span> <span class="nv">"Talane"</span>
                 <span class="p">}</span>
             <span class="p">},</span>
             <span class="nv">"negative_boost"</span> <span class="p">:</span> <span class="mi">0</span><span class="p">.</span><span class="mi">5</span>
         <span class="p">}</span>
     <span class="p">}</span>
 <span class="p">}</span>
</code></pre></div>        </div>
      </li>
      <li>Function score
        <ol>
          <li>Change the score of search documents by weight
            <ol>
              <li></li>
            </ol>

            <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">GET</span> <span class="n">employees</span><span class="o">/</span><span class="n">_search</span>
 <span class="p">{</span>
 <span class="nv">"_source"</span><span class="p">:</span> <span class="p">[</span><span class="nv">"position"</span><span class="p">,</span><span class="nv">"phrase"</span><span class="p">],</span> 
   <span class="nv">"query"</span><span class="p">:</span> <span class="p">{</span>
     <span class="nv">"function_score"</span><span class="p">:</span> <span class="p">{</span>
       <span class="nv">"query"</span><span class="p">:</span> <span class="p">{</span>
         <span class="nv">"match"</span><span class="p">:</span> <span class="p">{</span>
           <span class="nv">"position"</span><span class="p">:</span> <span class="nv">"manager"</span>
         <span class="p">}</span>
       <span class="p">},</span>
       <span class="nv">"functions"</span><span class="p">:</span> <span class="p">[</span>
         <span class="p">{</span>
           <span class="nv">"filter"</span><span class="p">:</span> <span class="p">{</span>
             <span class="nv">"match"</span><span class="p">:</span> <span class="p">{</span>
               <span class="nv">"phrase"</span><span class="p">:</span> <span class="nv">"coherent"</span>
             <span class="p">}</span>
           <span class="p">},</span>
           <span class="nv">"weight"</span><span class="p">:</span> <span class="mi">2</span>
         <span class="p">},</span>
         <span class="p">{</span>
           <span class="nv">"filter"</span><span class="p">:</span> <span class="p">{</span>
             <span class="nv">"match"</span><span class="p">:</span> <span class="p">{</span>
               <span class="nv">"phrase"</span><span class="p">:</span> <span class="nv">"emulation"</span>
             <span class="p">}</span>
           <span class="p">},</span>
           <span class="nv">"weight"</span><span class="p">:</span> <span class="mi">10</span>
         <span class="p">}</span>
       <span class="p">],</span>
       <span class="nv">"score_mode"</span><span class="p">:</span> <span class="nv">"multiply"</span><span class="p">,</span> 
       <span class="nv">"boost"</span><span class="p">:</span> <span class="nv">"5"</span><span class="p">,</span>
       <span class="nv">"boost_mode"</span><span class="p">:</span> <span class="nv">"multiply"</span>
     <span class="p">}</span>
   <span class="p">}</span>
 <span class="p">}</span>
</code></pre></div>            </div>
          </li>
        </ol>
      </li>
    </ol>
  </li>
</ol>]]></content><author><name>Chengru Song</name></author><category term="[&quot;work&quot;, &quot;es&quot;, &quot;basics&quot;]" /><category term="301-work-blog" /><category term="301-work-learning" /><summary type="html"><![CDATA[[ES] Query Basic Concept: https://logz.io/blog/elasticsearch-queries/ 42 query examples: https://coralogix.com/blog/42-elasticsearch-query-examples-hands-on-tutorial/ Concepts Match Query - 返回哪些text中包含搜索的关键词 example query POST employees/_search { "query": { "match": { "phrase": { "query" : "heuristic" } } } } Search phrase instead of a word POST employees/_search { "query": { "match": { "phrase": { "query" : "heuristic roots help", "operator" : "AND", "minimum_should_match": 3 } } } } Multi Fields Query POST employees/_search { "query": { "multi_match": { "query" : "research help" , "fields": ["position","phrase"] } } } Match phrase GET employees/_search { "query": { "match_phrase": { "phrase": { "query": "roots heuristic coherent", "slop": 1 } } } } Match phrase prefix GET employees/_search { "_source": [ "phrase" ], "query": { "match_phrase_prefix": { "phrase": { "query": "roots heuristic co", "max_expansions": 60 } } } } Term Query - 返回文本中的精确查找 Query exact values POST employees/_search { "query": { "terms": { "gender": [ "female", "male" ] } } } Exist query GET employees/_search { "query": { "exists": { "field": "company" } } } Range query POST employees/_search { "query": { "range" : { "experience" : { "gte" : 5, "lte" : 10 } } } } Id query POST employees/_search { "query": { "ids" : { "values" : ["1", "4"] } } } Prefix query GET employees/_search { "query": { "prefix": { "name": "al" } } } Wildcard Query GET employees/_search { "query": { "wildcard": { "country": { "value": "c*a" } } } } Regex query GET employees/_search { "query": { "regexp": { "position": "res[a-z]*" } } } Fuzzy query GET employees/_search { "query": { "fuzzy": { "country": { "value": "Chnia", "fuzziness": "2" } } } } Boosting POST employees/_search { "query": { "multi_match" : { "query" : "versatile Engineer", "fields": ["position^3", "phrase"] } } } Sort Sort by a field GET employees/_search { "_source": ["name","experience","salary"], "sort": [ { "experience": { "order": "desc" } } ] } Sort by multiple field GET employees/_search { "_source": [ "name", "experience", "salary" ], "sort": [ { "experience": { "order": "desc" } }, { "salary": { "order": "desc" } } ] } Compound query Bool 下面一共可以放这些字段 must The conditions or queries in this must occur in the documents to consider them a match. Also, this contributes to the score value.  Eg: if we keep query A and query B in the must section, each document in the result would satisfy both the queries, ie query A AND query B should The conditions/queries should match.   Result = query A OR query B filter Same as the must clause, but the score will be ignored must_not The conditions/queries specified must not occur in the documents. Scoring is ignored and kept as 0 as the results are ignored. POST _search { "query": { "bool" : { "must" : [], "filter": [], "must_not" : [], "should" : [] } } } Multiple conditions POST employees/_search { "query": { "bool": { "must": [ { "match": { "position": "manager" } }, { "range": { "experience": { "gte": 12 } } } ], "should": [ { "match": { "phrase": "versatile" } } ] } } } Condition combo 如果要查询下面这样的SQL，对应的condition是？ SQL: (company = Yamaha OR company = Yozio ) AND (position = manager OR position = associate ) AND (salary&gt;=100000) POST employees/_search { "query": { "bool": { "must": [ { "bool": { "should": [{ "match": { "company": "Talane" } }, { "match": { "company": "Yamaha" } }] } }, { "bool": { "should": [ { "match": { "position": "manager" } }, { "match": { "position": "Associate" } } ] } }, { "bool": { "must": [ { "range": { "salary": { "gte": 100000 } } } ] } }] } } } Boosting POST employees/_search { "query": { "boosting" : { "positive" : { "match": { "country": "china" } }, "negative" : { "match": { "company": "Talane" } }, "negative_boost" : 0.5 } } } Function score Change the score of search documents by weight GET employees/_search { "_source": ["position","phrase"], "query": { "function_score": { "query": { "match": { "position": "manager" } }, "functions": [ { "filter": { "match": { "phrase": "coherent" } }, "weight": 2 }, { "filter": { "match": { "phrase": "emulation" } }, "weight": 10 } ], "score_mode": "multiply", "boost": "5", "boost_mode": "multiply" } } }]]></summary></entry><entry><title type="html">【Basic】Python Pandas</title><link href="http://localhost:4000/work/pandas/basics/2022/07/01/pandas-usage.html" rel="alternate" type="text/html" title="【Basic】Python Pandas" /><published>2022-07-01T11:18:07+08:00</published><updated>2022-07-01T11:18:07+08:00</updated><id>http://localhost:4000/work/pandas/basics/2022/07/01/pandas-usage</id><content type="html" xml:base="http://localhost:4000/work/pandas/basics/2022/07/01/pandas-usage.html"><![CDATA[<h1 id="pandas-operations">Pandas Operations</h1>]]></content><author><name>Chengru Song</name></author><category term="[&quot;work&quot;, &quot;pandas&quot;, &quot;basics&quot;]" /><category term="301-work-blog" /><category term="301-work-learning" /><summary type="html"><![CDATA[Pandas Operations]]></summary></entry><entry><title type="html">【博客】Threads</title><link href="http://localhost:4000/blog/2022/07/01/anxious-collection.html" rel="alternate" type="text/html" title="【博客】Threads" /><published>2022-07-01T00:27:58+08:00</published><updated>2022-07-01T00:27:58+08:00</updated><id>http://localhost:4000/blog/2022/07/01/anxious-collection</id><content type="html" xml:base="http://localhost:4000/blog/2022/07/01/anxious-collection.html"><![CDATA[<h1 id="threads">Threads</h1>
<p>之所以叫threads，是因为想把一些混乱的逻辑梳理一下，目前形式不太好，有很多非常焦虑的事情。先放三篇文章：</p>

<ol>
  <li>
    <p>银行放贷问题：<a href="https://www.zhihu.com/question/537888391/answer/2546066628?utm_source=wechat_session&amp;utm_medium=social&amp;utm_oi=545672028217225216&amp;utm_content=group1_Answer&amp;utm_campaign=shareopn">link</a>
<img src="/assets/images/2022-07-01-00-31-27.png" alt="Image" /></p>
  </li>
  <li>
    <p>为什么房子断供的这么少？<a href="https://www.zhihu.com/question/498539515">link</a></p>
  </li>
</ol>

<p>原回答已经删除了，主要是讲了国内外对于房子的区别。国外房子放贷给群众，如果群众断供，那么房子被收回拍卖，不需要继续还放贷，因此这个风险其实在放贷一方也就是银行。但是国内是，放贷交不上，房子断供，房子被收走你还要继续还贷，金融风险转嫁，国家赢麻了。
<img src="/assets/images/2022-07-01-00-35-33.png" alt="Image" /></p>

<ol>
  <li>为什么年轻人想躺平？<a href="https://www.zhihu.com/question/475116887/answer/2135736238?utm_source=wechat_session&amp;utm_medium=social&amp;utm_oi=545672028217225216&amp;utm_content=group3_Answer&amp;utm_campaign=shareopn">link</a></li>
</ol>

<p>原因可能懂得都懂吧。资源被把持，普通人想拿到好的资源更难了，几乎不可能。
<img src="/assets/images/2022-07-01-00-38-58.png" alt="Image" /></p>]]></content><author><name>Chengru Song</name></author><category term="[&quot;Blog&quot;]" /><category term="301-life-blog" /><summary type="html"><![CDATA[Threads 之所以叫threads，是因为想把一些混乱的逻辑梳理一下，目前形式不太好，有很多非常焦虑的事情。先放三篇文章： 银行放贷问题：link 为什么房子断供的这么少？link 原回答已经删除了，主要是讲了国内外对于房子的区别。国外房子放贷给群众，如果群众断供，那么房子被收回拍卖，不需要继续还放贷，因此这个风险其实在放贷一方也就是银行。但是国内是，放贷交不上，房子断供，房子被收走你还要继续还贷，金融风险转嫁，国家赢麻了。 为什么年轻人想躺平？link 原因可能懂得都懂吧。资源被把持，普通人想拿到好的资源更难了，几乎不可能。]]></summary></entry></feed>